{"ast":null,"code":"import\"./styles.css\";import React from\"react\";import{useState,useEffect}from\"react\";import ScoreBoard from\"./components/ScoreBoard\";import Red from\"../src/images/red_apple.png\";import Green from\"./images/potatochip_green.png\";import Blue from\"./images/milk_pack.png\";import Yellow from\"./images/banana.png\";import Orange from\"./images/meat.png\";import Purple from\"./images/egg_white.png\";import Blank from\"./images/blank.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const width=8;const colors=[Red,Blue,Yellow,Green,Purple,Orange];export default function App(){const[colorsArrange,setColorsArrange]=useState([]);const[squareDragging,setSquareDragging]=useState(null);const[squareReplaced,setSquareReplaced]=useState(null);const[score,setScore]=useState(0);const[darkMode,setDarkMode]=useState(false);const checkForFourCol=()=>{for(let i=0;i<=39;i++){const col=[i,i+width,i+width*2,i+width*3];const presentColor=colorsArrange[i];const isBlank=colorsArrange[i]===Blank;if(col.every(index=>colorsArrange[index]===presentColor)&&!isBlank){setScore(s=>s+4);col.forEach(index=>colorsArrange[index]=Blank);return true;}}};const checkForFourRow=()=>{for(let i=0;i<64;i++){const row=[i,i+1,i+2,i+3];const presentColor=colorsArrange[i];const isBlank=colorsArrange[i]===Blank;const notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64];if(notValid.includes(i))continue;if(row.every(index=>colorsArrange[index]===presentColor)&&!isBlank){setScore(s=>s+4);row.forEach(index=>colorsArrange[index]=Blank);return true;}}};const checkForThreeCol=()=>{for(let i=0;i<=47;i++){const col=[i,i+width,i+width*2];const presentColor=colorsArrange[i];const isBlank=colorsArrange[i]===Blank;if(col.every(index=>colorsArrange[index]===presentColor)&&!isBlank){setScore(s=>s+3);col.forEach(index=>colorsArrange[index]=Blank);return true;}}};const checkForThreeRow=()=>{for(let i=0;i<64;i++){const row=[i,i+1,i+2];const presentColor=colorsArrange[i];const isBlank=colorsArrange[i]===Blank;const notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64];if(notValid.includes(i))continue;if(row.every(index=>colorsArrange[index]===presentColor)&&!isBlank){setScore(s=>s+3);row.forEach(index=>colorsArrange[index]=Blank);return true;}}};const moveToBelow=()=>{for(let i=0;i<=55;i++){const firstRow=[0,1,2,3,4,5,6,7];const isFirstRow=firstRow.includes(i);if(isFirstRow&&colorsArrange[i]===Blank){const randColor=Math.floor(Math.random()*colors.length);colorsArrange[i]=colors[randColor];}if(colorsArrange[i+width]===Blank){colorsArrange[i+width]=colorsArrange[i];colorsArrange[i]=Blank;}}};const dragStart=e=>{setSquareDragging(e.target);};const dragDrop=e=>{setSquareReplaced(e.target);};const dragEnd=()=>{const dragId=parseInt(squareDragging.getAttribute(\"dataid\"));const replaceId=parseInt(squareReplaced.getAttribute(\"dataid\"));colorsArrange[replaceId]=squareDragging.getAttribute(\"src\");colorsArrange[dragId]=squareReplaced.getAttribute(\"src\");const validMoves=[dragId+1,dragId-width,dragId-1,dragId+width];const validMove=validMoves.includes(replaceId);const is4col=checkForFourCol();const is4Row=checkForFourRow();const is3Col=checkForThreeCol();const is3Row=checkForThreeRow();if(replaceId&&validMove&&(is4col||is4Row||is3Col||is3Row)){setSquareDragging(null);setSquareReplaced(null);}else{colorsArrange[replaceId]=squareReplaced.getAttribute(\"src\");colorsArrange[dragId]=squareDragging.getAttribute(\"src\");setColorsArrange([...colorsArrange]);}};const createboard=()=>{const colorsArray=[];for(let i=0;i<width*width;i++){const randColor=Math.floor(Math.random()*colors.length);colorsArray.push(colors[randColor]);}setColorsArrange(colorsArray);};useEffect(()=>{createboard();},[]);useEffect(()=>{const timer=setInterval(()=>{checkForFourCol();checkForFourRow();checkForThreeCol();checkForThreeRow();moveToBelow();setColorsArrange([...colorsArrange]);},150);return()=>clearInterval(timer);},[checkForFourCol,checkForFourRow,checkForThreeCol,checkForThreeRow,moveToBelow,colorsArrange]);function toggleDarkMode(){setDarkMode(e=>!e);}function toggleReset(){setScore(0);createboard();}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:darkMode?{backgroundColor:\"black\"}:{backgroundColor:\"white\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"items\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-title\",children:/*#__PURE__*/_jsx(\"h1\",{style:darkMode?{color:\"white\"}:{color:\"black\"},children:\"Food Crush\"})}),/*#__PURE__*/_jsx(ScoreBoard,{score:score,darkMode:darkMode}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleDarkMode,className:\"darkModeBtn\",children:darkMode?\"Light Mode\":\"Dark Mode\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleReset,className:\"darkModeBtn\",children:\"Reset\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:colorsArrange.map((col,index)=>/*#__PURE__*/_jsx(\"img\",{src:col,alt:col,dataid:index,draggable:true,onDragStart:dragStart,onDragOver:e=>e.preventDefault(),onDragEnter:e=>e.preventDefault(),onDragLeave:e=>e.preventDefault(),onDrop:dragDrop,onDragEnd:dragEnd},index))})]});}","map":{"version":3,"names":["React","useState","useEffect","ScoreBoard","Red","Green","Blue","Yellow","Orange","Purple","Blank","jsx","_jsx","jsxs","_jsxs","width","colors","App","colorsArrange","setColorsArrange","squareDragging","setSquareDragging","squareReplaced","setSquareReplaced","score","setScore","darkMode","setDarkMode","checkForFourCol","i","col","presentColor","isBlank","every","index","s","forEach","checkForFourRow","row","notValid","includes","checkForThreeCol","checkForThreeRow","moveToBelow","firstRow","isFirstRow","randColor","Math","floor","random","length","dragStart","e","target","dragDrop","dragEnd","dragId","parseInt","getAttribute","replaceId","validMoves","validMove","is4col","is4Row","is3Col","is3Row","createboard","colorsArray","push","timer","setInterval","clearInterval","toggleDarkMode","toggleReset","className","style","backgroundColor","children","color","onClick","map","src","alt","dataid","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd"],"sources":["D:/WebDev_Projects2023Dec/foodCrush/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\nimport Red from \"../src/images/red_apple.png\";\nimport Green from \"./images/potatochip_green.png\";\nimport Blue from \"./images/milk_pack.png\";\nimport Yellow from \"./images/banana.png\";\nimport Orange from \"./images/meat.png\";\nimport Purple from \"./images/egg_white.png\";\nimport Blank from \"./images/blank.png\";\n\nconst width = 8;\nconst colors = [Red, Blue, Yellow, Green, Purple, Orange];\n\nexport default function App() {\n  const [colorsArrange, setColorsArrange] = useState([]);\n  const [squareDragging, setSquareDragging] = useState(null);\n  const [squareReplaced, setSquareReplaced] = useState(null);\n  const [score, setScore] = useState(0);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const checkForFourCol = () => {\n    for (let i = 0; i <= 39; i++) {\n      const col = [i, i + width, i + width * 2, i + width * 3];\n      const presentColor = colorsArrange[i];\n      const isBlank = colorsArrange[i] === Blank;\n      if (\n        col.every((index) => colorsArrange[index] === presentColor) &&\n        !isBlank\n      ) {\n        setScore((s) => s + 4);\n        col.forEach((index) => (colorsArrange[index] = Blank));\n        return true;\n      }\n    }\n  };\n\n  const checkForFourRow = () => {\n    for (let i = 0; i < 64; i++) {\n      const row = [i, i + 1, i + 2, i + 3];\n      const presentColor = colorsArrange[i];\n      const isBlank = colorsArrange[i] === Blank;\n      const notValid = [\n        5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53,\n        54, 55, 62, 63, 64,\n      ];\n\n      if (notValid.includes(i)) continue;\n      if (\n        row.every((index) => colorsArrange[index] === presentColor) &&\n        !isBlank\n      ) {\n        setScore((s) => s + 4);\n        row.forEach((index) => (colorsArrange[index] = Blank));\n        return true;\n      }\n    }\n  };\n\n  const checkForThreeCol = () => {\n    for (let i = 0; i <= 47; i++) {\n      const col = [i, i + width, i + width * 2];\n      const presentColor = colorsArrange[i];\n      const isBlank = colorsArrange[i] === Blank;\n      if (\n        col.every((index) => colorsArrange[index] === presentColor) &&\n        !isBlank\n      ) {\n        setScore((s) => s + 3);\n        col.forEach((index) => (colorsArrange[index] = Blank));\n        return true;\n      }\n    }\n  };\n\n  const checkForThreeRow = () => {\n    for (let i = 0; i < 64; i++) {\n      const row = [i, i + 1, i + 2];\n      const presentColor = colorsArrange[i];\n      const isBlank = colorsArrange[i] === Blank;\n      const notValid = [\n        6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64,\n      ];\n\n      if (notValid.includes(i)) continue;\n      if (\n        row.every((index) => colorsArrange[index] === presentColor) &&\n        !isBlank\n      ) {\n        setScore((s) => s + 3);\n        row.forEach((index) => (colorsArrange[index] = Blank));\n        return true;\n      }\n    }\n  };\n\n  const moveToBelow = () => {\n    for (let i = 0; i <= 55; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7];\n      const isFirstRow = firstRow.includes(i);\n      if (isFirstRow && colorsArrange[i] === Blank) {\n        const randColor = Math.floor(Math.random() * colors.length);\n        colorsArrange[i] = colors[randColor];\n      }\n      if (colorsArrange[i + width] === Blank) {\n        colorsArrange[i + width] = colorsArrange[i];\n        colorsArrange[i] = Blank;\n      }\n    }\n  };\n\n  const dragStart = (e) => {\n    setSquareDragging(e.target);\n  };\n\n  const dragDrop = (e) => {\n    setSquareReplaced(e.target);\n  };\n\n  const dragEnd = () => {\n    const dragId = parseInt(squareDragging.getAttribute(\"dataid\"));\n    const replaceId = parseInt(squareReplaced.getAttribute(\"dataid\"));\n\n    colorsArrange[replaceId] = squareDragging.getAttribute(\"src\");\n    colorsArrange[dragId] = squareReplaced.getAttribute(\"src\");\n\n    const validMoves = [dragId + 1, dragId - width, dragId - 1, dragId + width];\n\n    const validMove = validMoves.includes(replaceId);\n\n    const is4col = checkForFourCol();\n    const is4Row = checkForFourRow();\n    const is3Col = checkForThreeCol();\n    const is3Row = checkForThreeRow();\n\n    if (replaceId && validMove && (is4col || is4Row || is3Col || is3Row)) {\n      setSquareDragging(null);\n      setSquareReplaced(null);\n    } else {\n      colorsArrange[replaceId] = squareReplaced.getAttribute(\"src\");\n      colorsArrange[dragId] = squareDragging.getAttribute(\"src\");\n      setColorsArrange([...colorsArrange]);\n    }\n  };\n\n  const createboard = () => {\n    const colorsArray = [];\n\n    for (let i = 0; i < width * width; i++) {\n      const randColor = Math.floor(Math.random() * colors.length);\n      colorsArray.push(colors[randColor]);\n    }\n    setColorsArrange(colorsArray);\n  };\n\n  useEffect(() => {\n    createboard();\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForFourCol();\n      checkForFourRow();\n      checkForThreeCol();\n      checkForThreeRow();\n      moveToBelow();\n      setColorsArrange([...colorsArrange]);\n    }, 150);\n    return () => clearInterval(timer);\n  }, [\n    checkForFourCol,\n    checkForFourRow,\n    checkForThreeCol,\n    checkForThreeRow,\n    moveToBelow,\n    colorsArrange,\n  ]);\n\n  function toggleDarkMode() {\n    setDarkMode((e) => !e);\n  }\n\n  function toggleReset() {\n    setScore(0);\n    createboard();\n  }\n  return (\n    <div\n      className=\"App\"\n      style={\n        darkMode ? { backgroundColor: \"black\" } : { backgroundColor: \"white\" }\n      }\n    >\n      <div className=\"items\">\n        <div className=\"game-title\">\n          <h1 style={darkMode ? { color: \"white\" } : { color: \"black\" }}>\n            Food Crush\n          </h1>\n        </div>\n        <ScoreBoard score={score} darkMode={darkMode} />\n        <button onClick={toggleDarkMode} className=\"darkModeBtn\">\n          {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n        </button>\n        <button onClick={toggleReset} className=\"darkModeBtn\">\n          Reset\n        </button>\n      </div>\n      <div className=\"game\">\n        {colorsArrange.map((col, index) => (\n          <img\n            key={index}\n            src={col}\n            alt={col}\n            dataid={index}\n            draggable={true}\n            onDragStart={dragStart}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={(e) => e.preventDefault()}\n            onDragLeave={(e) => e.preventDefault()}\n            onDrop={dragDrop}\n            onDragEnd={dragEnd}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}